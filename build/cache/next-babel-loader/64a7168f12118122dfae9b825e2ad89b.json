{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport isomorphicFetch from 'isomorphic-fetch'; // 待优化：\n//     http长链接配置\n// 预置fetch query\n\nvar defaultQuery = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nvar getHost = function getHost() {\n  return 'https://api.51ifonts.com';\n};\n\nvar HOST = getHost();\n/**\n * @param {String} url\n * @param {Object} query 请求参数\n * @param {string} responseType json: 处理json数据，text：处理text类型数据（.html）\n */\n\nvar baseRequest = function baseRequest(url, query) {\n  var responseType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'json';\n  return new Promise(function (resolve, reject) {\n    isomorphicFetch(url, query).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n        var _response;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(response.status > 400)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                throw new Error('Bad response from server');\n\n              case 4:\n                _context.next = 6;\n                return response[responseType]();\n\n              case 6:\n                _response = _context.sent;\n\n                if (!(responseType === 'text')) {\n                  _context.next = 9;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", resolve(_response));\n\n              case 9:\n                if (!(+_response.code !== 1)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                console.error(_response.msg);\n                return _context.abrupt(\"return\", reject(_response));\n\n              case 12:\n                resolve(_response);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(), reject)[\"catch\"](function () {});\n  });\n};\n\nvar request = {}; // JSON POST\n\nrequest.post = function (url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  for (var _len = arguments.length, rest = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    rest[_key - 2] = arguments[_key];\n  }\n\n  return baseRequest.apply(void 0, [HOST + url, _objectSpread(_objectSpread({}, defaultQuery), {}, {\n    body: JSON.stringify(params)\n  })].concat(rest));\n}; // JSON GET\n\n\nrequest.get = function (url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _query = Object.keys(params).map(function (key) {\n    return key + '=' + params[key];\n  }).join('&');\n\n  for (var _len2 = arguments.length, rest = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    rest[_key2 - 2] = arguments[_key2];\n  }\n\n  return baseRequest.apply(void 0, [HOST + url + (_query ? '/?' + _query : ''), _objectSpread(_objectSpread({}, defaultQuery), {}, {\n    method: 'GET'\n  })].concat(rest));\n}; // FORM POST\n\n\nrequest.form = function (url, form) {\n  var _data = new FormData(form);\n\n  for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n    rest[_key3 - 2] = arguments[_key3];\n  }\n\n  return baseRequest.apply(void 0, [HOST + url, _objectSpread(_objectSpread({}, defaultQuery), {}, {\n    body: _data\n  })].concat(rest));\n}; // 使用示例\n// var form = document.querySelector('form')\n// request.form('/user',form)\n// FILE POST\n\n\nrequest.file = function (url, _ref2) {\n  var file = _ref2.file,\n      _ref2$params = _ref2.params,\n      params = _ref2$params === void 0 ? {} : _ref2$params;\n\n  var _data = new FormData();\n\n  data.append('file', file);\n  Object.keys(params).forEach(function (key) {\n    data.append(key, params[key]);\n  });\n  return baseRequest(HOST + url, _objectSpread(_objectSpread({}, defaultQuery), {}, {\n    body: _data\n  }));\n}; // 使用示例\n// var input = document.querySelector('input[type=\"file\"]');\n// request.file('/user', { file: input.files[0], params: { userName: 'user' } });\n\n\nexport { isomorphicFetch as fetch, baseRequest };\nexport default request;","map":{"version":3,"sources":["/Users/howl/Public/workspace/personalCode/next-app-template/src/utils/request.js"],"names":["isomorphicFetch","defaultQuery","method","headers","getHost","HOST","baseRequest","url","query","responseType","Promise","resolve","reject","then","response","status","Error","_response","code","console","error","msg","request","post","params","rest","body","JSON","stringify","get","_query","Object","keys","map","key","join","form","_data","FormData","file","data","append","forEach","fetch"],"mappings":"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","sourcesContent":["import isomorphicFetch from 'isomorphic-fetch';\n\n// 待优化：\n//     http长链接配置\n\n// 预置fetch query\nconst defaultQuery = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst getHost = () => {\n  return 'https://api.51ifonts.com';\n};\n\nconst HOST = getHost();\n\n/**\n * @param {String} url\n * @param {Object} query 请求参数\n * @param {string} responseType json: 处理json数据，text：处理text类型数据（.html）\n */\nconst baseRequest = (url, query, responseType = 'json') => {\n  return new Promise(function (resolve, reject) {\n    isomorphicFetch(url, query)\n      .then(async response => {\n        if (response.status > 400) {\n          throw new Error('Bad response from server');\n        } else {\n          const _response = await response[responseType]();\n          // 处理text类型数据\n          if (responseType === 'text') return resolve(_response);\n\n          if (+_response.code !== 1) {\n            console.error(_response.msg);\n            return reject(_response);\n          }\n          resolve(_response);\n        }\n      }, reject)\n      .catch(() => {});\n  });\n};\n\nconst request = {};\n\n// JSON POST\nrequest.post = (url, params = {}, ...rest) => baseRequest(HOST + url, { ...defaultQuery, body: JSON.stringify(params) }, ...rest);\n\n// JSON GET\nrequest.get = (url, params = {}, ...rest) => {\n  const _query = Object.keys(params)\n    .map(key => {\n      return key + '=' + params[key];\n    })\n    .join('&');\n  return baseRequest(HOST + url + (_query ? '/?' + _query : ''), { ...defaultQuery, method: 'GET' }, ...rest);\n};\n\n// FORM POST\nrequest.form = (url, form, ...rest) => {\n  const _data = new FormData(form);\n  return baseRequest(HOST + url, { ...defaultQuery, body: _data }, ...rest);\n};\n// 使用示例\n// var form = document.querySelector('form')\n// request.form('/user',form)\n\n// FILE POST\nrequest.file = (url, { file, params = {} }) => {\n  const _data = new FormData();\n  data.append('file', file);\n  Object.keys(params).forEach(key => {\n    data.append(key, params[key]);\n  });\n  return baseRequest(HOST + url, { ...defaultQuery, body: _data });\n};\n// 使用示例\n// var input = document.querySelector('input[type=\"file\"]');\n// request.file('/user', { file: input.files[0], params: { userName: 'user' } });\n\nexport { isomorphicFetch as fetch, baseRequest };\n\nexport default request;\n"]},"metadata":{},"sourceType":"module"}